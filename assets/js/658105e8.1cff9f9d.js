"use strict";(self.webpackChunktestdocu=self.webpackChunktestdocu||[]).push([[1920],{3905:function(e,n,a){a.d(n,{Zo:function(){return p},kt:function(){return d}});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),c=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},p=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),d=r,k=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return a?t.createElement(k,o(o({ref:n},p),{},{components:a})):t.createElement(k,o({ref:n},p))}));function d(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},72117:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var t=a(87462),r=a(63366),i=(a(67294),a(3905)),o=["components"],s={sidebar_position:1},l="Infra \ud658\uacbd",c={unversionedId:"\uc124\uce58 \ub9e4\ub274\uc5bc/Infra \ud658\uacbd/\uc778\ud504\ub77c \ud658\uacbd",id:"\uc124\uce58 \ub9e4\ub274\uc5bc/Infra \ud658\uacbd/\uc778\ud504\ub77c \ud658\uacbd",isDocsHomePage:!1,title:"Infra \ud658\uacbd",description:"Accuinsight 3.0\uc744 \uc124\uce58\ud558\uae30 \uc704\ud55c K8S \ud658\uacbd \uc124\uc815",source:"@site/docs/\uc124\uce58 \ub9e4\ub274\uc5bc/Infra \ud658\uacbd/\uc778\ud504\ub77c \ud658\uacbd.md",sourceDirName:"\uc124\uce58 \ub9e4\ub274\uc5bc/Infra \ud658\uacbd",slug:"/\uc124\uce58 \ub9e4\ub274\uc5bc/Infra \ud658\uacbd/\uc778\ud504\ub77c \ud658\uacbd",permalink:"/docs/\uc124\uce58 \ub9e4\ub274\uc5bc/Infra \ud658\uacbd/\uc778\ud504\ub77c \ud658\uacbd",editUrl:"https://gitlab.twolinecode.com/sk-cnc/aiip/doc-frontend/docs/\uc124\uce58 \ub9e4\ub274\uc5bc/Infra \ud658\uacbd/\uc778\ud504\ub77c \ud658\uacbd.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"AutoML\ubaa8\ub4c8",permalink:"/docs/\uc124\uce58 \ub9e4\ub274\uc5bc/AutoML\ubaa8\ub4c8/AutoML\ubaa8\ub4c8"},next:{title:"Runtime\ubaa8\ub4c8",permalink:"/docs/\uc124\uce58 \ub9e4\ub274\uc5bc/Runtime\ubaa8\ub4c8/Runtime\ubaa8\ub4c8"}},p=[{value:"Product EKS \ud658\uacbd \uad6c\uc131",id:"product-eks-\ud658\uacbd-\uad6c\uc131",children:[{value:"\uc0ac\uc804 \uad6c\uc131",id:"\uc0ac\uc804-\uad6c\uc131",children:[]},{value:"EKS \uad6c\uc131",id:"eks-\uad6c\uc131",children:[]},{value:"RDS \uc0dd\uc131",id:"rds-\uc0dd\uc131",children:[]},{value:"EFS \uc0dd\uc131",id:"efs-\uc0dd\uc131",children:[]}]},{value:"Harbor Cluster \uad6c\uc131",id:"harbor-cluster-\uad6c\uc131",children:[{value:"EKS \uad6c\uc131",id:"eks-\uad6c\uc131-1",children:[]},{value:"Rook(Ceph) \uad6c\uc131",id:"rookceph-\uad6c\uc131",children:[]},{value:"Harbor \uad6c\uc131",id:"harbor-\uad6c\uc131",children:[]}]},{value:"\uae30\ud0c0 \uad6c\uc131",id:"\uae30\ud0c0-\uad6c\uc131",children:[{value:"ElasticSearch \uad6c\uc131",id:"elasticsearch-\uad6c\uc131",children:[]}]},{value:"\uc0ac\uc6a9\uc790 \ud658\uacbd \uad6c\uc131",id:"\uc0ac\uc6a9\uc790-\ud658\uacbd-\uad6c\uc131",children:[]}],m={toc:p};function u(e){var n=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,t.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"infra-\ud658\uacbd"},"Infra \ud658\uacbd"),(0,i.kt)("p",null,"Accuinsight 3.0\uc744 \uc124\uce58\ud558\uae30 \uc704\ud55c K8S \ud658\uacbd \uc124\uc815"),(0,i.kt)("h2",{id:"product-eks-\ud658\uacbd-\uad6c\uc131"},"Product EKS \ud658\uacbd \uad6c\uc131"),(0,i.kt)("h3",{id:"\uc0ac\uc804-\uad6c\uc131"},"\uc0ac\uc804 \uad6c\uc131"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"API User \uc0dd\uc131"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"AWS Console \u2192 IAM \u2192 Users \u2192 ",(0,i.kt)("inlineCode",{parentName:"li"},"Add users")),(0,i.kt)("li",{parentName:"ol"},"user name \uc785\ub825 (ex: api-eks-admin)"),(0,i.kt)("li",{parentName:"ol"},"Access Type \u2192 Programmatic Access \ub9cc Check (Console \uc811\uc18d \uc5c6\ub294 API \uc804\uc6a9 \uacc4\uc815)"),(0,i.kt)("li",{parentName:"ol"},"Permission \u2192 ",(0,i.kt)("inlineCode",{parentName:"li"},"AdministratorAccess")," Policy \uc801\uc6a9"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Key \uc0dd\uc131"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"aws kms create-alias --alias-name alias/eksworkshop --target-key-id $(aws kms create-key --query KeyMetadata.Arn --output text)\n\nexport MASTER_ARN=$(aws kms describe-key --key-id alias/eksworkshop --query KeyMetadata.Arn --output text)\n")))),(0,i.kt)("h3",{id:"eks-\uad6c\uc131"},"EKS \uad6c\uc131"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"EKS Cluster \uc0dd\uc131"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"eksctl create cluster -f aiip-prod-eks.yaml")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"aiip-prod-eks.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'---\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\n\nmetadata:\n  name: aiip-prod\n  region: ap-northeast-2\n  version: "1.18"\n\navailabilityZones: ["ap-northeast-2a", "ap-northeast-2b", "ap-northeast-2c"]\n\nmanagedNodeGroups:\n- name: master\n  desiredCapacity: 2\n  instanceType: m5a.4xlarge\n  ssh:\n    enableSsm: true\n- name: worker\n  desiredCapacity: 3\n  instanceType: m5a.4xlarge\n  ssh:\n    enableSsm: true\n- name: runtime\n  desiredCapacity: 1\n  instanceType: m5a.12xlarge\n  ssh:\n    enableSsm: true\n- name: gpu\n  desiredCapacity: 1\n  instanceType: p2.8xlarge\n  ssh:\n    enableSsm: true\n\n# To enable all of the control plane logs, uncomment below:\n# cloudWatch:\n#  clusterLogging:\n#    enableTypes: ["*"]\n\nsecretsEncryption:\n  keyARN: ${MASTER_ARN}\n')))),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"\ud604\uc7ac yaml\uc5d0\ub294 vpc\uac00 default(192.168.0.1/16)\uc73c\ub85c \uc0dd\uc131\ub418\uba70 \ubcc0\uacbd\uc2dc \uc544\ub798 \ud56d\ubaa9 \ucd94\uac00"),(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"vpc:\ncidr: 10.190.0.0/16\nclusterEndpoints:\npublicAccess: true\nprivateAccess: true\n"))),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://www.eksworkshop.com/030_eksctl/launcheks/"},"https://www.eksworkshop.com/030_eksctl/launcheks/"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Kube configmap update"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"eksctl create iamidentitymapping --cluster aiip-prod --arn ${user of role arn} --group system:masters --username admin"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"ingress controller \uad6c\uc131"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"OIDC Provider \uc5f0\uacb0"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"export CLUSTER_NAME=aiip-prod\nexport AWS_REGION=ap-northeast-2\neksctl utils associate-iam-oidc-provider --region=$AWS_REGION --cluster $CLUSTER_NAME --approve\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Policy \uc0dd\uc131"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl -o iam-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json\n\naws iam create-policy \\\n    --policy-name AWSLoadBalancerControllerIAMPolicy \\\n    --policy-document file://iam-policy.json\n")),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"aiip-prod \ud658\uacbd\uc5d0\uc11c\ub294 console\uc5d0\uc11c \ucd94\uac00\ud558\uc600\uc73c\uba70, ",(0,i.kt)("inlineCode",{parentName:"p"},"POLICY-EKS-IAM"),"\uc73c\ub85c \uc0dd\uc131\ub418\uc5b4\uc788\uc74c"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"RBAC \uc0dd\uc131 \ubc0f \ubc18\uc601"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl craete -f alb-rbac.yaml\n")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"alb-rbac.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    app.kubernetes.io/name: alb-ingress-controller\n  name: alb-ingress-controller\nrules:\n  - apiGroups:\n      - ""\n      - extensions\n    resources:\n      - configmaps\n      - endpoints\n      - events\n      - ingresses\n      - ingresses/status\n      - services\n      - pods/status\n    verbs:\n      - create\n      - get\n      - list\n      - update\n      - watch\n      - patch\n  - apiGroups:\n      - ""\n      - extensions\n    resources:\n      - nodes\n      - pods\n      - secrets\n      - services\n      - namespaces\n    verbs:\n      - get\n      - list\n      - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  labels:\n    app.kubernetes.io/name: alb-ingress-controller\n  name: alb-ingress-controller\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: alb-ingress-controller\nsubjects:\n  - kind: ServiceAccount\n    name: alb-ingress-controller\n    namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    app.kubernetes.io/name: alb-ingress-controller\n  name: alb-ingress-controller\n  namespace: kube-system\n'))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"IAM \uc5f0\uacb0"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"eksctl create iamserviceaccount --region $AWS_REGION --name alb-ingress-controller --namespace kube-system --cluster $CLUSTER_NAME --attach-policy-arn arn:aws:iam::606004476940:policy/POLICY-EKS-IAM --override-existing-serviceaccounts --approve\n")),(0,i.kt)("p",{parentName:"li"},"policy-arn\uc740 \uc0dd\uc131\ud55c Policy\uc5d0 \ub9de\uac8c \ubcc0\uacbd")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"ingress controller \uc218\uc815 \ubc0f \ubc30\ud3ec"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f alb-ingress-controller.yaml\n")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"alb-ingress-controller.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# Application Load Balancer (ALB) Ingress Controller Deployment Manifest.\n# This manifest details sensible defaults for deploying an ALB Ingress Controller.\n# GitHub: https://github.com/kubernetes-sigs/aws-alb-ingress-controller\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.kubernetes.io/name: alb-ingress-controller\n  name: alb-ingress-controller\n  # Namespace the ALB Ingress Controller should run in. Does not impact which\n  # namespaces it's able to resolve ingress resource for. For limiting ingress\n  # namespace scope, see --watch-namespace.\n  namespace: kube-system\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: alb-ingress-controller\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: alb-ingress-controller\n    spec:\n      containers:\n        - name: alb-ingress-controller\n          args:\n            # Limit the namespace where this ALB Ingress Controller deployment will\n            # resolve ingress resources. If left commented, all namespaces are used.\n            # - --watch-namespace=your-k8s-namespace\n\n            # Setting the ingress-class flag below ensures that only ingress resources with the\n            # annotation kubernetes.io/ingress.class: \"alb\" are respected by the controller. You may\n            # choose any class you'd like for this controller to respect.\n            - --ingress-class=alb\n\n            # REQUIRED\n            # Name of your cluster. Used when naming resources created\n            # by the ALB Ingress Controller, providing distinction between\n            # clusters.\n            - --cluster-name=\n\n            # AWS VPC ID this ingress controller will use to create AWS resources.\n            # If unspecified, it will be discovered from ec2metadata.\n            - --aws-vpc-id=vpc-xxxxxx\n\n            # AWS region this ingress controller will operate in.\n            # If unspecified, it will be discovered from ec2metadata.\n            # List of regions: http://docs.aws.amazon.com/general/latest/gr/rande.html#vpc_region\n            - --aws-region=ap-northeast-2\n\n            # Enables logging on all outbound requests sent to the AWS API.\n            # If logging is desired, set to true.\n            # - --aws-api-debug\n\n            # Maximum number of times to retry the aws calls.\n            # defaults to 10.\n            # - --aws-max-retries=10\n          env:\n            # AWS key id for authenticating with the AWS API.\n            # This is only here for examples. It's recommended you instead use\n            # a project like kube2iam for granting access.\n            # - name: AWS_ACCESS_KEY_ID\n            #   value: KEYVALUE\n\n            # AWS key secret for authenticating with the AWS API.\n            # This is only here for examples. It's recommended you instead use\n            # a project like kube2iam for granting access.\n            # - name: AWS_SECRET_ACCESS_KEY\n            #   value: SECRETVALUE\n          # Repository location of the ALB Ingress Controller.\n          image: docker.io/amazon/aws-alb-ingress-controller:v1.1.8\n      serviceAccountName: alb-ingress-controller\n")))),(0,i.kt)("p",{parentName:"li"},"cluster-name, aws-vpc-id, aws-region \ud56d\ubaa9\uc740 \ud658\uacbd\uc5d0 \ub9de\uac8c \ubcc0\uacbd")))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Istio \uc124\uce58 \ubc0f VirtualService \uad6c\uc131"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"istiocli \uc124\uce58 (Local)"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"echo 'export ISTIO_VERSION=\"1.10.0\"' >> ${HOME}/.bash_profile\nsource ${HOME}/.bash_profile\n\ncurl -L https://istio.io/downloadIstio | ISTIO_VERSION=${ISTIO_VERSION} sh -\n\ncd ./istio-${ISTIO_VERSION}\n\nsudo cp -v bin/istioctl /usr/local/bin/\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"istio \uc124\uce58"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"istioctl install --set profile=default\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"istio gateway, ingress, virtualservice \uc124\uce58"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"istio-gateway.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: aiip-istio-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - "aiip.skcc.com"\n'))),(0,i.kt)("li",{parentName:"ul"},"istio-ingress.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: istio-ingress\n  namespace: istio-system\n  annotations:\n    kubernetes.io/ingress.class: alb\n    alb.ingress.kubernetes.io/target-type: ip\n    alb.ingress.kubernetes.io/scheme: internet-facing\n    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=300\n    # alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket=aiip-elb-logs,access_logs.s3.prefix=istio\nspec:\n  rules:\n  - http:\n        paths:\n          - backend:\n              serviceName: istio-ingressgateway\n              servicePort: 80\n"))),(0,i.kt)("li",{parentName:"ul"},"istio-vertualservice-common.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: aiip-virtualservice-common\n  namespace: aiip-common\nspec:\n  gateways:\n  - aiip-istio-gateway.istio-system.svc.cluster.local\n  hosts:\n  - \"aiip.skcc.com\"\n  http:\n  - corsPolicy:\n      allowCredentials: true\n      allowHeaders:\n      - authorization\n      - content-type\n      - accept\n      - origin\n      - user-agent\n      - x-token\n      - x-origin\n      - refresh-token\n      - OPTIONS\n      allowMethods:\n      - POST\n      - GET\n      - PUT\n      - PATCH\n      - DELETE\n      allowOrigins:\n      - exact: http://localhost:8080/*\n      maxAge: 24h\n    match:\n    - uri:\n        prefix: /api/common/backend/\n    - uri:\n        prefix: /api/common/backend\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: aiip-integrated-backend.aiip-common.svc.cluster.local\n        port:\n          number: 80\n  - match:\n    - uri:\n        prefix: /api/common/sso/\n    - uri:\n        prefix: /api/common/sso\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: core-sso-server.aiip-common.svc.cluster.local\n        port:\n          number: 7080\n  - match:\n    - uri:\n        prefix: /api/common/fm/\n    - uri:\n        prefix: /api/common/fm\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: core-file-manager.aiip-common.svc.cluster.local\n        port:\n          number: 7090\n  # - match:\n  #   - uri:\n  #       prefix: /runtime\n  #   - uri:\n  #       prefix: /runtime/\n  #   rewrite:\n  #     uri: /\n  #   route:\n  #   - destination:\n  #       host: web.aiip-runtime.svc.cluster.local\n  #       subset: v2\n  #       port:\n  #         number: 80\n  - corsPolicy:\n      allowCredentials: false\n      allowHeaders:\n      - '*'\n      allowMethods:\n      - GET\n      - POST\n      - PUT\n      - DELETE\n      allowOrigins:\n      - exact: '*'\n    match:\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/account/\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/account\n    name: rule-account\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: account.aiip-runtime.svc.cluster.local\n        port:\n          number: 17001\n  - corsPolicy:\n      allowCredentials: false\n      allowHeaders:\n      - '*'\n      allowMethods:\n      - GET\n      - POST\n      - PUT\n      - DELETE\n      allowOrigins:\n      - exact: '*'\n    match:\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/ifservice/\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/ifservice\n    name: rule-ifservice\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: ifservice.aiip-runtime.svc.cluster.local\n        port:\n          number: 17002\n  - corsPolicy:\n      allowCredentials: false\n      allowHeaders:\n      - '*'\n      allowMethods:\n      - GET\n      - POST\n      - PUT\n      - DELETE\n      allowOrigins:\n      - exact: '*'\n    match:\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/history/\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/history\n    name: rule-history\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: history.aiip-runtime.svc.cluster.local\n        port:\n          number: 17003\n  - corsPolicy:\n      allowCredentials: false\n      allowHeaders:\n      - '*'\n      allowMethods:\n      - GET\n      - POST\n      - PUT\n      - DELETE\n      allowOrigins:\n      - exact: '*'\n    match:\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/monitoring/\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/monitoring\n    name: rule-monitoring\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: monitoring.aiip-runtime.svc.cluster.local\n        port:\n          number: 17004\n  - corsPolicy:\n      allowCredentials: false\n      allowHeaders:\n      - '*'\n      allowMethods:\n      - GET\n      - POST\n      - PUT\n      - DELETE\n      - HEAD\n      - PATCH\n      allowOrigins:\n      - exact: '*'\n    match:\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/core/\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/core\n    name: rule-core\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: core.aiip-runtime.svc.cluster.local\n        port:\n          number: 17005\n  - corsPolicy:\n      allowCredentials: false\n      allowHeaders:\n      - '*'\n      allowMethods:\n      - GET\n      - POST\n      - PUT\n      - DELETE\n      allowOrigins:\n      - exact: '*'\n    match:\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/explain/\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/explain\n    name: rule-explain\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: explain.aiip-runtime.svc.cluster.local\n        port:\n          number: 17008\n  - corsPolicy:\n      allowCredentials: false\n      allowHeaders:\n      - '*'\n      allowMethods:\n      - GET\n      - POST\n      - PUT\n      - DELETE\n      allowOrigins:\n      - exact: '*'\n    match:\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/repo/\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/repo\n    name: rule-repo\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: repo.aiip-runtime.svc.cluster.local\n        port:\n          number: 17009\n  - corsPolicy:\n      allowCredentials: false\n      allowHeaders:\n      - '*'\n      allowMethods:\n      - GET\n      - POST\n      - PUT\n      - DELETE\n      allowOrigins:\n      - exact: '*'\n    match:\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/tekton/\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/tekton\n    name: rule-tekton\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: tekton-dashboard.tekton-pipelines.svc.cluster.local\n        port:\n          number: 9097\n  - corsPolicy:\n      allowCredentials: false\n      allowHeaders:\n      - '*'\n      allowMethods:\n      - GET\n      - POST\n      - PUT\n      - DELETE\n      allowOrigins:\n      - exact: '*'\n    match:\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/grafana/\n    - ignoreUriCase: true\n      uri:\n        prefix: /api/runtime/grafana\n    name: rule-grafana\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: grafana.istio-system.svc.cluster.local\n        port:        \n          number: 3000\n  - route:\n    - destination:\n        host: aiip-integrated-front.aiip-common.svc.cluster.local\n        port:\n          number: 80\n"))),(0,i.kt)("li",{parentName:"ul"},"istio-vertualservice-modeler.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: aiip-virtualservice-modeler\n  namespace: aiip-modeler\nspec:\n  gateways:\n  - aiip-istio-gateway.istio-system.svc.cluster.local\n  hosts:\n  - "aiip.skcc.com"\n  http:\n  - match:\n    - uri:\n        prefix: /api/modeler/backend/\n    - uri:\n        prefix: /api/modeler/backend        \n    rewrite:\n      uri: "/"\n    route:\n    - destination:\n        host: modeler-api-svc.aiip-modeler.svc.cluster.local    \n        port:\n          number: 8080        \n  - match:\n    - uri:\n        prefix: /api/modeler/gitlab/\n    - uri:\n        prefix: /api/modeler/gitlab        \n    rewrite: \n      uri: "/"        \n    route:\n    - destination:\n        host: modeler-gitlab-svc.aiip-modeler.svc.cluster.local\n        port:\n          number: 8880\n'))),(0,i.kt)("li",{parentName:"ul"},"istio-vertualservice-pipeline.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: aiip-virtualservice-pipeline\n  namespace: aiip-pipeline\nspec:\n  gateways:\n  - aiip-istio-gateway.istio-system.svc.cluster.local\n  hosts:\n  - "aiip.skcc.com"\n  http:\n  - match:\n    - uri:\n        prefix: /api/pipeline/backend/\n    - uri:\n        prefix: /api/pipeline/backend     \n    rewrite: \n      uri: "/"        \n    route:\n    - destination:\n        host: pipeline-backend-svc.aiip-pipeline.svc.cluster.local              \n        port:\n          number: 8080\n'))),(0,i.kt)("li",{parentName:"ul"},"istio-vertualservice-runtime.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: aiip-virtualservice-runtime\n  namespace: istio-system\nspec:\n  gateways:\n  - aiip-istio-gateway.istio-system.svc.cluster.local\n  hosts:\n  - "aiip.skcc.com"\n  http:\n  - match:\n    - uri:\n        prefix: /runtime\n    - uri:\n        prefix: /runtime/\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: web.aiip-runtime.svc.cluster.local\n        port:\n          number: 80\n'))),(0,i.kt)("li",{parentName:"ul"},"istio-vertualservice-tuning.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: aiip-virtualservice-tuning\n  namespace: aiip-tuning\nspec:\n  gateways:\n  - aiip-istio-gateway.istio-system.svc.cluster.local\n  hosts:\n  - "aiip.skcc.com"\n  http:\n  - match:\n    - uri:\n        prefix: /api/tuning/\n    - uri:\n        prefix: /api/tuning\n    rewrite:\n      uri: "/"\n    route:\n    - destination:\n        host: accutuning-master-svc.aiip-tuning.svc.cluster.local\n        port:\n          number: 8000          \n  - match:\n    - uri:\n        prefix: /media\n    - uri:\n        prefix: /media/\n    route:\n    - destination:\n        host: accutuning-master-svc.aiip-tuning.svc.cluster.local\n        port:\n          number: 8000\n'))))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"EFS CSI driver \uc124\uce58"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"eksctl create iamserviceaccount \\\n    --name efs-csi-controller-sa \\\n    --namespace kube-system \\\n    --cluster aiip-prod \\\n    --attach-policy-arn arn:aws:iam::606004476940:policy/AmazonEKS_EFS_CSI_Driver_Policy \\\n    --approve \\\n    --override-existing-serviceaccounts \\\n    --region ap-northeast-2\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"EKS Private \uad6c\uc131"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"aws eks update-cluster-config \\\n    --region ap-northeast-2 \\\n    --name aiip-prod \\\n    --resources-vpc-config endpointPublicAccess=true,endpointPrivateAccess=true\n")))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.eksworkshop.com/advanced/310_servicemesh_with_istio/download/"},"https://www.eksworkshop.com/advanced/310_servicemesh_with_istio/download/")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Namespace / RBAC"),(0,i.kt)("li",{parentName:"ul"},"Ingress / \uc778\uc99d\uc11c")),(0,i.kt)("h3",{id:"rds-\uc0dd\uc131"},"RDS \uc0dd\uc131"),(0,i.kt)("p",null,"AWS Console\uc5d0\uc11c \uc0dd\uc131"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\uc885\ub958 : MariaDB"),(0,i.kt)("li",{parentName:"ul"},"Instance Class : db.t3.xlarge"),(0,i.kt)("li",{parentName:"ul"},"Storage : 100GB"),(0,i.kt)("li",{parentName:"ul"},"Engine Version : 10.4.13"),(0,i.kt)("li",{parentName:"ul"},"Instance Name : aiip-prod-db"),(0,i.kt)("li",{parentName:"ul"},"Availability : Multi-AZ deployment \uc120\ud0dd"),(0,i.kt)("li",{parentName:"ul"},"VPC, Subnet : EKS Cluster VPC, Subnet \uc120\ud0dd"),(0,i.kt)("li",{parentName:"ul"},"Public Access : No")),(0,i.kt)("h3",{id:"efs-\uc0dd\uc131"},"EFS \uc0dd\uc131"),(0,i.kt)("p",null,"AWS Console\uc5d0\uc11c \uc0dd\uc131"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Name : aiip-prod-efs"),(0,i.kt)("li",{parentName:"ul"},"Availability : Regional"),(0,i.kt)("li",{parentName:"ul"},"VPC : EKS Cluster VPC")),(0,i.kt)("h2",{id:"harbor-cluster-\uad6c\uc131"},"Harbor Cluster \uad6c\uc131"),(0,i.kt)("h3",{id:"eks-\uad6c\uc131-1"},"EKS \uad6c\uc131"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"EKS Cluster \uc0dd\uc131"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"eksctl create cluster -f aiip-stor-eks.yaml")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"aiip-stor-eks.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'---\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\n\nmetadata:\n  name: aiip-stor\n  region: ap-northeast-2\n  version: "1.21"\n\navailabilityZones: ["ap-northeast-2a", "ap-northeast-2b", "ap-northeast-2c"]\n\nvpc:\n  cidr: 10.190.0.0/16\n  clusterEndpoints:\n    publicAccess: true\n    privateAccess: true\n\nmanagedNodeGroups:\n- name: stor2-ng\n  desiredCapacity: 3\n  instanceType: m5a.xlarge\n  volumeSize: 200\n  volumeType: gp2\n  ssh:\n    enableSsm: true\n    publicKeyName: aiip-eks-worker\n\n# To enable all of the control plane logs, uncomment below:\n# cloudWatch:\n#  clusterLogging:\n#    enableTypes: ["*"]\n\n# secretsEncryption:\n#   keyARN: arn:aws:kms:ap-northeast-2:606004476940:key/5028f9ec-9d74-4e09-bb39-f5c32234793f\n'))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Kube configmap update"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"eksctl create iamidentitymapping --cluster aiip-stor --arn ${user of role arn} --group system:masters --username admin"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"ingress controller \uad6c\uc131"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\uc804\uc5ed\ubcc0\uc218 \uc124\uc815"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"export CLUSTER_NAME=aiip-stor\nexport AWS_REGION=ap-northeast-2\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"RBAC \uc0dd\uc131 \ubc0f \ubc18\uc601"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl craete -f alb-rbac.yaml\n")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"alb-rbac.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    app.kubernetes.io/name: alb-ingress-controller\n  name: alb-ingress-controller\nrules:\n  - apiGroups:\n      - ""\n      - extensions\n    resources:\n      - configmaps\n      - endpoints\n      - events\n      - ingresses\n      - ingresses/status\n      - services\n      - pods/status\n    verbs:\n      - create\n      - get\n      - list\n      - update\n      - watch\n      - patch\n  - apiGroups:\n      - ""\n      - extensions\n    resources:\n      - nodes\n      - pods\n      - secrets\n      - services\n      - namespaces\n    verbs:\n      - get\n      - list\n      - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  labels:\n    app.kubernetes.io/name: alb-ingress-controller\n  name: alb-ingress-controller\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: alb-ingress-controller\nsubjects:\n  - kind: ServiceAccount\n    name: alb-ingress-controller\n    namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    app.kubernetes.io/name: alb-ingress-controller\n  name: alb-ingress-controller\n  namespace: kube-system\n'))))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"IAM \uc5f0\uacb0"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"eksctl create iamserviceaccount --region $AWS_REGION --name alb-ingress-controller --namespace kube-system --cluster $CLUSTER_NAME --attach-policy-arn arn:aws:iam::606004476940:policy/POLICY-EKS-IAM --override-existing-serviceaccounts --approve\n")),(0,i.kt)("p",{parentName:"li"},"policy-arn\uc740 \uc0dd\uc131\ud55c Policy\uc5d0 \ub9de\uac8c \ubcc0\uacbd")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"ingress controller \uc218\uc815 \ubc0f \ubc30\ud3ec"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f alb-ingress-controller.yaml\n")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"alb-ingress-controller.yaml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# Application Load Balancer (ALB) Ingress Controller Deployment Manifest.\n# This manifest details sensible defaults for deploying an ALB Ingress Controller.\n# GitHub: https://github.com/kubernetes-sigs/aws-alb-ingress-controller\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.kubernetes.io/name: alb-ingress-controller\n  name: alb-ingress-controller\n  # Namespace the ALB Ingress Controller should run in. Does not impact which\n  # namespaces it's able to resolve ingress resource for. For limiting ingress\n  # namespace scope, see --watch-namespace.\n  namespace: kube-system\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: alb-ingress-controller\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: alb-ingress-controller\n    spec:\n      containers:\n        - name: alb-ingress-controller\n          args:\n            # Limit the namespace where this ALB Ingress Controller deployment will\n            # resolve ingress resources. If left commented, all namespaces are used.\n            # - --watch-namespace=your-k8s-namespace\n\n            # Setting the ingress-class flag below ensures that only ingress resources with the\n            # annotation kubernetes.io/ingress.class: \"alb\" are respected by the controller. You may\n            # choose any class you'd like for this controller to respect.\n            - --ingress-class=alb\n\n            # REQUIRED\n            # Name of your cluster. Used when naming resources created\n            # by the ALB Ingress Controller, providing distinction between\n            # clusters.\n            - --cluster-name=\n\n            # AWS VPC ID this ingress controller will use to create AWS resources.\n            # If unspecified, it will be discovered from ec2metadata.\n            - --aws-vpc-id=vpc-xxxxxx\n\n            # AWS region this ingress controller will operate in.\n            # If unspecified, it will be discovered from ec2metadata.\n            # List of regions: http://docs.aws.amazon.com/general/latest/gr/rande.html#vpc_region\n            - --aws-region=ap-northeast-2\n\n            # Enables logging on all outbound requests sent to the AWS API.\n            # If logging is desired, set to true.\n            # - --aws-api-debug\n\n            # Maximum number of times to retry the aws calls.\n            # defaults to 10.\n            # - --aws-max-retries=10\n          env:\n            # AWS key id for authenticating with the AWS API.\n            # This is only here for examples. It's recommended you instead use\n            # a project like kube2iam for granting access.\n            # - name: AWS_ACCESS_KEY_ID\n            #   value: KEYVALUE\n\n            # AWS key secret for authenticating with the AWS API.\n            # This is only here for examples. It's recommended you instead use\n            # a project like kube2iam for granting access.\n            # - name: AWS_SECRET_ACCESS_KEY\n            #   value: SECRETVALUE\n          # Repository location of the ALB Ingress Controller.\n          image: docker.io/amazon/aws-alb-ingress-controller:v1.1.8\n      serviceAccountName: alb-ingress-controller\n")))),(0,i.kt)("p",{parentName:"li"},"cluster-name, aws-vpc-id, aws-region \ud56d\ubaa9\uc740 \ud658\uacbd\uc5d0 \ub9de\uac8c \ubcc0\uacbd"))))),(0,i.kt)("h3",{id:"rookceph-\uad6c\uc131"},"Rook(Ceph) \uad6c\uc131"),(0,i.kt)("p",null,"source "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/rook/rook.git\ncd rook/cluster/examples/kubernetes/ceph\n")),(0,i.kt)("p",null,"\ud658\uacbd \uc900\ube44"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create -f crds.yaml -f common.yaml -f operator.yaml\nkubectl get pod -n rook-ceph #\ud655\uc778\uc6a9\n")),(0,i.kt)("p",null,"Cluster \uad6c\uc131"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Cluster configuration\ncluster.yaml")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'#################################################################################################################\n# Define the settings for the rook-ceph cluster with common settings for a production cluster.\n# All nodes with available raw devices will be used for the Ceph cluster. At least three nodes are required\n# in this example. See the documentation for more details on storage settings available.\n\n# For example, to create the cluster:\n#   kubectl create -f crds.yaml -f common.yaml -f operator.yaml\n#   kubectl create -f cluster-on-pvc.yaml\n#################################################################################################################\napiVersion: ceph.rook.io/v1\nkind: CephCluster\nmetadata:\n  name: rook-ceph\n  namespace: rook-ceph # namespace:cluster\nspec:\n  dataDirHostPath: /var/lib/rook\n  mon:\n    count: 3\n    allowMultiplePerNode: false\n    volumeClaimTemplate:\n      spec:\n        storageClassName: gp2\n        resources:\n          requests:\n            storage: 10Gi\n  cephVersion:\n    image: ceph/ceph:v15.2.9\n    allowUnsupported: false\n  skipUpgradeChecks: false\n  continueUpgradeAfterChecksEvenIfNotHealthy: false\n  mgr:\n    modules:\n    - name: pg_autoscaler\n      enabled: true\n  dashboard:\n    enabled: true\n    ssl: false\n  crashCollector:\n    disable: false\n  storage:\n    storageClassDeviceSets:\n    - name: set1\n      count: 20\n      portable: true\n      tuneDeviceClass: true\n      tuneFastDeviceClass: false\n      encrypted: false\n      placement:\n        topologySpreadConstraints:\n        - maxSkew: 1\n          topologyKey: kubernetes.io/hostname\n          whenUnsatisfiable: ScheduleAnyway\n          labelSelector:\n            matchExpressions:\n            - key: app\n              operator: In\n              values:\n              - rook-ceph-osd\n      preparePlacement:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: app\n                  operator: In\n                  values:\n                  - rook-ceph-osd\n                - key: app\n                  operator: In\n                  values:\n                  - rook-ceph-osd-prepare\n              topologyKey: kubernetes.io/hostname\n        topologySpreadConstraints:\n        - maxSkew: 1\n          topologyKey: topology.kubernetes.io/zone\n          whenUnsatisfiable: ScheduleAnyway\n          labelSelector:\n            matchExpressions:\n            - key: app\n              operator: In\n              values:\n              - rook-ceph-osd-prepare\n      resources:\n      volumeClaimTemplates:\n      - metadata:\n          name: data\n        spec:\n          resources:\n            requests:\n              storage: 100Gi\n          storageClassName: gp2\n          volumeMode: Block\n          accessModes:\n            - ReadWriteOnce\n  resources:\n  disruptionManagement:\n    managePodBudgets: false\n    osdMaintenanceTimeout: 30\n    pgHealthCheckTimeout: 0\n    manageMachineDisruptionBudgets: false\n    machineDisruptionBudgetNamespace: openshift-machine-api\n  #     connectionDetails:\n         #KMS_PROVIDER: "vault"\n         #VAULT_ADDR: VAULT_ADDR_CHANGE_ME # e,g: https://vault.my-domain.com:8200\n         #VAULT_BACKEND_PATH: "rook"\n# UNCOMMENT THIS TO ENABLE A KMS CONNECTION\n# Also, do not forget to replace both:\n#   * ROOK_TOKEN_CHANGE_ME: with a base64 encoded value of the token to use\n#   * VAULT_ADDR_CHANGE_ME: with the Vault address\n# ---\n# apiVersion: v1\n# kind: Secret\n# metadata:\n#   name: rook-vault-token\n#   namespace: rook-ceph # namespace:cluster\n# data:\n#   token: ROOK_TOKEN_CHANGE_ME\n')),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Cluster \ubc30\ud3ec")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create -f cluster.yaml\nkubectl get pod -n rook-ceph #\ud655\uc778\uc6a9\n")),(0,i.kt)("p",null,"Operation Tool \uad6c\uc131"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create -f toolbox.yaml\nkubectl get pod -n rook-ceph #\ud655\uc778\uc6a9\n### tool \uc0ac\uc6a9\nkubectl -n rook-ceph exec -it deploy/rook-ceph-tools -- /bin/bash\n### pod \uc811\uc18d \uc774\ud6c4 \nceph osd tree\nceph status\n...\n")),(0,i.kt)("p",null,"Object Storage \uad6c\uc131"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"object.yaml")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'#################################################################################################################\n# Create an object store with settings for replication in a production environment. A minimum of 3 hosts with\n# OSDs are required in this example.\n#  kubectl create -f object.yaml\n#################################################################################################################\n\napiVersion: ceph.rook.io/v1\nkind: CephObjectStore\nmetadata:\n  name: my-store\n  namespace: rook-ceph # namespace:cluster\nspec:\n  # The pool spec used to create the metadata pools. Must use replication.\n  metadataPool:\n    failureDomain: host\n    replicated:\n      size: 3\n      # Disallow setting pool with replica 1, this could lead to data loss without recovery.\n      # Make sure you\'re *ABSOLUTELY CERTAIN* that is what you want\n      requireSafeReplicaSize: true\n    parameters:\n      # Inline compression mode for the data pool\n      # Further reference: https://docs.ceph.com/docs/master/rados/configuration/bluestore-config-ref/#inline-compression\n      compression_mode: none\n      # gives a hint (%) to Ceph in terms of expected consumption of the total cluster capacity of a given pool\n      # for more info: https://docs.ceph.com/docs/master/rados/operations/placement-groups/#specifying-expected-pool-size\n      #target_size_ratio: ".5"\n  # The pool spec used to create the data pool. Can use replication or erasure coding.\n  dataPool:\n    failureDomain: host\n    replicated:\n      size: 3\n      # Disallow setting pool with replica 1, this could lead to data loss without recovery.\n      # Make sure you\'re *ABSOLUTELY CERTAIN* that is what you want\n      requireSafeReplicaSize: true\n    parameters:\n      # Inline compression mode for the data pool\n      # Further reference: https://docs.ceph.com/docs/master/rados/configuration/bluestore-config-ref/#inline-compression\n      compression_mode: none\n      # gives a hint (%) to Ceph in terms of expected consumption of the total cluster capacity of a given pool\n      # for more info: https://docs.ceph.com/docs/master/rados/operations/placement-groups/#specifying-expected-pool-size\n      #target_size_ratio: ".5"\n  # Whether to preserve metadata and data pools on object store deletion\n  preservePoolsOnDelete: false\n  # The gateway service configuration\n  gateway:\n    # A reference to the secret in the rook namespace where the ssl certificate is stored\n    # sslCertificateRef:\n    # A reference to the secret in the rook namespace where the ca bundle is stored\n    # caBundleRef:\n    # The port that RGW pods will listen on (http)\n    port: 80\n    # The port that RGW pods will listen on (https). An ssl certificate is required.\n    # securePort: 443\n    # The number of pods in the rgw deployment\n    instances: 1\n    # The affinity rules to apply to the rgw deployment.\n    placement:\n      podAntiAffinity:\n        preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                  - key: app\n                    operator: In\n                    values:\n                      - rook-ceph-rgw\n              # topologyKey: */zone can be used to spread RGW across different AZ\n              # Use <topologyKey: failure-domain.beta.kubernetes.io/zone> in k8s cluster if your cluster is v1.16 or lower\n              # Use <topologyKey: topology.kubernetes.io/zone>  in k8s cluster is v1.17 or upper\n              topologyKey: kubernetes.io/hostname\n    # A key/value list of annotations\n    #  nodeAffinity:\n    #    requiredDuringSchedulingIgnoredDuringExecution:\n    #      nodeSelectorTerms:\n    #      - matchExpressions:\n    #        - key: role\n    #          operator: In\n    #          values:\n    #          - rgw-node\n    #  topologySpreadConstraints:\n    #  tolerations:\n    #  - key: rgw-node\n    #    operator: Exists\n    #  podAffinity:\n    #  podAntiAffinity:\n    # A key/value list of annotations\n    annotations:\n    #  key: value\n    # A key/value list of labels\n    labels:\n    #  key: value\n    resources:\n    # The requests and limits set here, allow the object store gateway Pod(s) to use half of one CPU core and 1 gigabyte of memory\n    #  limits:\n    #    cpu: "500m"\n    #    memory: "1024Mi"\n    #  requests:\n    #    cpu: "500m"\n    #    memory: "1024Mi"\n    # priorityClassName: my-priority-class\n  #zone:\n    #name: zone-a\n  # service endpoint healthcheck\n  healthCheck:\n    bucket:\n      disabled: false\n      interval: 60s\n    # Configure the pod liveness probe for the rgw daemon\n    livenessProbe:\n      disabled: false\n  # security oriented settings\n  # security:\n  # To enable the KMS configuration properly don\'t forget to uncomment the Secret at the end of the file\n  #   kms:\n  #     # name of the config map containing all the kms connection details\n  #     connectionDetails:\n  #        KMS_PROVIDER: "vault"\n  #        VAULT_ADDR: VAULT_ADDR_CHANGE_ME # e,g: http://vault.my-domain.com:8200\n  #        VAULT_BACKEND_PATH: "rook"\n  #        VAULT_SECRET_ENGINE: "kv"\n  #        VAULT_BACKEND: v2\n  #     # name of the secret containing the kms authentication token\n  #     tokenSecretName: rook-vault-token\n# # UNCOMMENT THIS TO ENABLE A KMS CONNECTION\n# # Also, do not forget to replace both:\n# #  * ROOK_TOKEN_CHANGE_ME: with a base64 encoded value of the token to use\n# #  * VAULT_ADDR_CHANGE_ME: with the Vault address\n# ---\n# apiVersion: v1\n# kind: Secret\n# metadata:\n#   name: rook-vault-token\n#   namespace: rook-ceph # namespace:cluster\n# data:\n#   token: ROOK_TOKEN_CHANGE_ME\n')),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"object storage \ubc30\ud3ec"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"kubectl create -f object.yaml\n")))),(0,i.kt)("p",null,"Dashboard \uc124\uce58"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"cluster.yaml\uc5d0 dashboard \uc635\uc158 \ud655\uc778"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"dashboard:\n    enabled: true\n    # serve the dashboard under a subpath (useful when you are accessing the dashboard via a reverse proxy)\n    # urlPrefix: /ceph-dashboard\n    # serve the dashboard at the given port.\n    # port: 8443\n    # serve the dashboard using SSL\n    ssl: true\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"dashboard-external-https.yaml \ubc30\ud3ec \ud6c4 \uc811\uc18d"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create -f dashboard-external-https.yaml\nkubectl get svc -n rook-ceph\n")),(0,i.kt)("p",{parentName:"li"},"dashboard \uae30\ubcf8 login"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# ID : admin\n# Password\nkubectl -n rook-ceph get secret rook-ceph-dashboard-password -o jsonpath=\"{['data']['password']}\" | base64 --decode && echo\n")))),(0,i.kt)("h3",{id:"harbor-\uad6c\uc131"},"Harbor \uad6c\uc131"),(0,i.kt)("h2",{id:"\uae30\ud0c0-\uad6c\uc131"},"\uae30\ud0c0 \uad6c\uc131"),(0,i.kt)("h3",{id:"elasticsearch-\uad6c\uc131"},"ElasticSearch \uad6c\uc131"),(0,i.kt)("h2",{id:"\uc0ac\uc6a9\uc790-\ud658\uacbd-\uad6c\uc131"},"\uc0ac\uc6a9\uc790 \ud658\uacbd \uad6c\uc131"),(0,i.kt)("p",null,"IAM "),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Group\ubcc4 \uad8c\ud55c\uad00\ub9ac",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"viewer, api, dev, oerator, admin \ub4f1 \uadf8\ub8f9\ubcc4\ub85c \uad00\ub9ac"))),(0,i.kt)("li",{parentName:"ol"},"\uc0ac\uc6a9\uc790\ubcc4 user \uc0dd\uc131",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"\uc0ac\uc6a9\uc790\ubcc4 email \uc815\ubcf4\ub85c user \uc0dd\uc131"),(0,i.kt)("li",{parentName:"ol"},"api \uae30\ub2a5\uc774 \ud544\uc694\ud560 \uacbd\uc6b0 \ubd84\ub9ac\ud558\uc5ec api \uc804\uc6a9 user \uc0dd\uc131 (EKS \uc811\uadfc \uad8c\ud55c \uc5f0\ub3d9)"))),(0,i.kt)("li",{parentName:"ol"},"Bastion \uacc4\uc815 \uc0dd\uc131",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"IAM user\ubcc4\ub85c bastion \uacc4\uc815 \uc0dd\uc131"),(0,i.kt)("li",{parentName:"ol"},"\uc0ac\uc6a9\uc790\ubcc4 \ud544\uc694 IP\ub9cc bastion Security group\uc5d0\uc11c \uc811\uadfc \ud5c8\uc6a9"),(0,i.kt)("li",{parentName:"ol"},"\uc0ac\uc6a9\uc790\ubcc4 SSH key \ubc1c\uae09\ud558\uc5ec SSH Tunneling\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc811\uadfc")))))}u.isMDXComponent=!0}}]);